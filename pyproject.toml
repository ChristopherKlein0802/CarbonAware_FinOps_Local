# Carbon-Aware FinOps Dashboard - Bachelor Thesis Project

[project]
name = "carbon-aware-finops"
version = "1.0.0"
description = "Bachelor Thesis: Integrated Carbon & Cost Monitoring for Cloud Infrastructure"
authors = [
    {name = "Christian Klein", email = "ch.klein@example.com"}
]
readme = "README.md"
requires-python = ">=3.11"
license = {file = "LICENSE"}

dependencies = [
    "streamlit>=1.49.0",
    "boto3>=1.34.0",
    "requests>=2.31.0",
    "httpx>=0.28.1",
    "python-dotenv>=1.0.0",
    "pydantic>=2.6.0",
    "pandas>=2.1.0",
    "numpy>=1.24.0",
    "plotly>=5.17.0",
    "pytest>=7.4.0",
]

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

markers = [
    "integration: tests requiring live API integrations and credentials",
    "unit: fast unit tests that don't require external dependencies",
    "slow: tests that take a long time to run",
]

addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "-ra",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/vendor/*",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstractmethod",
]

[tool.black]
line-length = 120
target-version = ["py311", "py312"]

[tool.isort]
profile = "black"
line_length = 120

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true
exclude = ['venv', '.venv', 'tests', 'terraform']
